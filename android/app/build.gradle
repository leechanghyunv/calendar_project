buildscript {
    ext.kotlin_version = '1.9.10' // 또는 더 최신 버전
}

plugins {
    id 'com.android.application'  /// AGP 버전확인
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    println "Flutter SDK not found. Define location with flutter.sdk in the local.properties file."
    gradle.buildFinished { result ->
        if (!result.failure) {
            throw new Exception("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
        }
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '21'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.2.8'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.app.calendar_project_240727"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.app.calendar_project_240727"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        buildConfig true
    }
}


flutter {
    source '../../'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'io.flutter:flutter_embedding_release:1.0.0-36335019a8'
    implementation 'com.google.firebase:firebase-messaging:24.0.3'
    implementation 'com.android.support:multidex:1.0.3'
}

configurations.all {
    resolutionStrategy {
        force 'androidx.core:core-ktx:1.13.1'
        force 'org.jetbrains.kotlin:kotlin-stdlib:1.9.10' // kotlin_version과 동일하게
        force 'org.jetbrains.kotlin:kotlin-stdlib-common:1.9.10' // kotlin_version과 동일하게
    }
}

apply plugin: 'com.google.gms.google-services'